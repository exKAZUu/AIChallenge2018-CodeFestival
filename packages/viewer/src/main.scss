@import 'helpers';

$screen-height: 600px;
$font-size: $screen-height / 60;

$field-width: 40 * $font-size;
$grid-spacing: $font-size;
$grid-row-cells: 5; // number of cells in a row (nCol in our js)
$grid-col-cells: 5;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
$field-height: $tile-size * $grid-col-cells + $grid-spacing * ($grid-col-cells + 1);
$tile-border-radius: $font-size / 4;

$background-color: #faf8ef;
$text-color: #776e65;
$bright-text-color: #f9f6f2;

$tile-color: #eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);

$board-container-background: #bbada0;

$transition-speed: 100ms;

.buttle-2048-viewer {
  position: relative;
  height: 100%;
  width: 100%;
  overflow: hidden;
  background: $background-color;
  color: $text-color;
  line-height: 1;
  font-size: $font-size;

  * {
    box-sizing: border-box;
  }

  div {
    display: block;
    margin: 0;
    padding: 0;
    line-height: 1;
    background: transparent;
    color: inherit;
    font-size: inherit;
    font-weight: inherit;
    text-shadow: none;
  }

  .game {
    position: relative;
    height: 100%;
    width: 100%;
    display: flex;
    flex-grow: 1;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;
    font-weight: bold;
  }

  .player {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: $font-size;

    .header {
      font-size: 1.5 * $font-size;
      margin-bottom: $font-size;
      color: $board-container-background;
    }
  }

  .turn-player {
    .header {
      color: $text-color;
    }
  }

  .stats {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 30 * $font-size;
    margin-bottom: 5 * $font-size;
    font-size: 1.5 * $font-size;
    font-weight: bold;

    .label {
      margin-top: 5 * $font-size;
      margin-bottom: $font-size;
      color: $board-container-background;
    }

    #turn {
      font-size: 3 * $font-size;
    }

    .score,
    .time-left,
    .merge-count {
      display: flex;
      flex-direction: row;
      width: 100%;
      font-size: 3 * $font-size;

      div {
        flex-basis: 50%;
        text-align: center;
      }
    }
  }

  .results {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    bottom: 2 * $font-size;
    z-index: 100;
    padding: (1.5 * $font-size) (2 * $font-size);
    border-radius: $tile-border-radius;
    background-color: rgba($text-color, 0.95);
    color: $background-color;

    #winner {
      font-size: 3 * $font-size;
    }

    #reason {
      margin-top: $font-size / 2;
      font-size: 1.5 * $font-size;
    }
  }
  .results-show {
    @include animation(pop 200ms ease $transition-speed);
    @include animation-fill-mode(backwards);
  }
  .results-hide {
    @include transform(scale(0));
  }

  .inputs {
    display: flex;
    flex-direction: row;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 101;
    padding: $font-size / 2;
    color: #000;

    button,
    input {
      margin: $font-size / 4;
      font-size: $font-size;
    }

    #turn-slider {
      flex-grow: 1;
    }
  }

  .board-container {
    position: relative;
    padding: $grid-spacing;

    cursor: default;
    -webkit-touch-callout: none;
    -ms-touch-callout: none;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;

    -ms-touch-action: none;
    touch-action: none;

    background: $board-container-background;
    border-radius: $tile-border-radius * 2;
    width: $field-width;
    height: $field-height;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  .grid-container {
    position: absolute;
    z-index: 1;
  }

  .grid-row {
    margin-bottom: $grid-spacing;

    &:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: '';
      display: block;
      clear: both;
    }
  }

  .grid-cell {
    width: $tile-size;
    height: $tile-size;
    margin-right: $grid-spacing;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, 0.35);

    &:last-child {
      margin-right: 0;
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;
  }

  .tile {
    &,
    .tile-inner {
      width: $tile-size;
      height: $tile-size;
      line-height: $tile-size;
    }

    // Build position classes
    @for $x from 1 through $grid-row-cells {
      @for $y from 1 through $grid-col-cells {
        &.tile-position-#{$x}-#{$y} {
          $xPos: ($tile-size + $grid-spacing) * ($x - 1);
          $yPos: ($tile-size + $grid-spacing) * ($y - 1);
          @include transform(translate($xPos, $yPos));
        }
      }
    }
  }

  .tile {
    position: absolute; // Makes transforms relative to the top-left corner

    .tile-inner {
      border-radius: $tile-border-radius;

      background: $tile-color;
      text-align: center;
      font-weight: bold;
      z-index: 10;
    }

    // Movement transition
    @include transition($transition-speed ease-in-out);
    -webkit-transition-property: -webkit-transform;
    -moz-transition-property: -moz-transform;
    transition-property: transform;

    $base: 2;
    $exponent: 1;
    $original-limit: 11;
    $limit: 16;

    // Colors for all 11 states, false = no special color
    $special-colors: false false, false false, #f78e48 true, #fc5e2e true, #ff3333 true, #ff0000 true, false true,
      false true, false true, false true, false true, false true, false true, false true, false true, false true;

    // Build tile colors
    @while $exponent <= $limit {
      $power: pow($base, $exponent);

      &.tile-#{$power} .tile-inner {
        // Calculate base background color
        $gold-percent: min(100, ($exponent - 1) / ($original-limit - 1) * 100);
        $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

        $nth-color: nth($special-colors, $exponent);

        $special-background: nth($nth-color, 1);
        $bright-color: nth($nth-color, 2);

        @if $special-background {
          $mixed-background: mix($special-background, $mixed-background, 55%);
        }

        @if $bright-color {
          color: $bright-text-color;
        }

        // Set background
        background: $mixed-background;

        // Add glow
        $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

        @if not $special-background {
          box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
            inset 0 0 0 1px rgba(white, $glow-opacity / 3);
        }

        // Adjust font size for bigger numbers
        @if $power < 100 {
          font-size: $tile-size * (2 / 3);
        } @else if $power < 1000 {
          font-size: $tile-size * 0.5;
        } @else if $power < 10000 {
          font-size: $tile-size * 0.4;
        } @else {
          font-size: $tile-size * (1 / 3);
        }
      }

      $exponent: $exponent + 1;
    }

    // Super tiles (above 2048)
    &.tile-super .tile-inner {
      color: $bright-text-color;
      background: #aa60a6;
    }
  }

  @include keyframes(appear) {
    0% {
      opacity: 0;
      @include transform(scale(0));
    }

    100% {
      opacity: 1;
      @include transform(scale(1));
    }
  }

  .tile-new .tile-inner {
    @include animation(appear 200ms ease $transition-speed);
    @include animation-fill-mode(backwards);
  }

  @include keyframes(pop) {
    0% {
      @include transform(scale(0));
    }

    50% {
      @include transform(scale(1.2));
    }

    100% {
      @include transform(scale(1));
    }
  }

  .tile-merged .tile-inner {
    z-index: 20;
    @include animation(pop 200ms ease $transition-speed);
    @include animation-fill-mode(backwards);
  }
}
